:root {
    --primary-color: #ff00ff;
    --secondary-color: #00ffff;
    --background-color: #000000;
    --text-color: #ffffff;
    --accent-color: #ff00ff;
    --border-color: #00ffff;
    --body-font: 'EB Garamond', serif;
    --quote-font: 'Times New Roman', Times, serif;
    --heading-font: 'Press Start 2P', cursive;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'EB Garamond', serif;
    background-color: #0a0a0a;
    color: #e0e0e0;
    line-height: 1.6;
    background-image: url('public/images/backgrounds/bg_main.jpg');
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    position: relative;
    cursor: none;
    font-size: 18px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    position: relative;
    z-index: 10;
    background: transparent;
    backdrop-filter: blur(5px);
}

header {
    text-align: center;
    padding: 100px 0;
    border-bottom: 4px solid var(--primary-color);
    margin-bottom: 50px;
    position: relative;
    overflow: hidden;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 45%, var(--primary-color) 45%, var(--primary-color) 55%, transparent 55%);
    background-size: 20px 20px;
    opacity: 0.1;
    z-index: -1;
}

h1 {
    font-size: 36px;
    color: var(--primary-color);
    text-shadow: 4px 4px 0 var(--secondary-color),
        8px 8px 0 rgba(0, 0, 0, 0.5);
    margin-bottom: 30px;
    position: relative;
    display: inline-block;
    font-family: var(--heading-font);
}

h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 4px;
    background: var(--secondary-color);
    transform: skew(-45deg);
}

.subtitle {
    font-size: 20px;
    color: var(--secondary-color);
    text-shadow: 2px 2px 0 var(--primary-color);
    margin-top: 20px;
}

section {
    margin: 150px 0;
    padding: 40px;
    border: 4px solid var(--primary-color);
    position: relative;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(10px);
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
    transform-style: preserve-3d;
    perspective: 1000px;
    transition: all 0.5s ease;
    overflow: hidden;
}

section::before {
    display: none;
}

section::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent 45%, var(--primary-color) 45%, var(--primary-color) 55%, transparent 55%);
    background-size: 20px 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

section:hover::after {
    opacity: 0.05;
}

.content {
    max-width: 800px;
    margin: 0 auto;
    position: relative;
}

h2 {
    color: var(--primary-color);
    margin-bottom: 40px;
    text-align: center;
    font-size: 1.8rem;
    text-shadow: 3px 3px 0 var(--secondary-color);
    font-family: var(--heading-font);
}

h3 {
    color: var(--secondary-color);
    margin: 30px 0;
    font-size: 1.2rem;
    text-shadow: 2px 2px 0 var(--primary-color);
    font-family: var(--heading-font);
}

.finding {
    margin: 50px 0;
    padding: 30px;
    border: 2px solid var(--primary-color);
    background: rgba(0, 0, 0, 0.7);
    position: relative;
    overflow: hidden;
}

.finding::before {
    display: none;
}

p {
    font-family: var(--body-font);
    margin: 30px 0;
    font-size: 1rem;
    line-height: 1.8;
    text-shadow: 1px 1px 0 var(--primary-color);
}

footer {
    text-align: center;
    padding: 80px 0;
    border-top: 4px solid var(--primary-color);
    font-size: 0.9rem;
    position: relative;
    background: rgba(0, 0, 0, 0.9);
}

/* 8-bit animations */
@keyframes pixelate {
    0% {
        transform: scale(1) rotate(0deg);
    }

    25% {
        transform: scale(1.02) rotate(0.5deg);
    }

    50% {
        transform: scale(1) rotate(0deg);
    }

    75% {
        transform: scale(0.98) rotate(-0.5deg);
    }

    100% {
        transform: scale(1) rotate(0deg);
    }
}

@keyframes glitch {
    0% {
        transform: translate(0);
    }

    20% {
        transform: translate(-2px, 2px);
    }

    40% {
        transform: translate(-2px, -2px);
    }

    60% {
        transform: translate(2px, 2px);
    }

    80% {
        transform: translate(2px, -2px);
    }

    100% {
        transform: translate(0);
    }
}

section:hover {
    animation: pixelate 0.5s ease-in-out;
    transform: translateY(-5px) rotate(1deg);
    box-shadow: 0 0 30px rgba(255, 0, 255, 0.5);
}

h1:hover {
    animation: glitch 0.3s ease-in-out;
}

/* Cursor styles */
.cursor {
    width: 20px;
    height: 20px;
    border: 2px solid var(--primary-color);
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    transform: translate(-50%, -50%);
    transition: transform 0.1s ease;
}

.click-effect {
    width: 20px;
    height: 20px;
    border: 2px solid var(--secondary-color);
    position: fixed;
    pointer-events: none;
    z-index: 9998;
    transform: translate(-50%, -50%) scale(0);
    animation: click-animation 0.5s ease-out;
}

@keyframes click-animation {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 1;
    }

    100% {
        transform: translate(-50%, -50%) scale(3);
        opacity: 0;
    }
}

/* Responsive design */
@media (max-width: 768px) {
    h1 {
        font-size: 2rem;
    }

    .subtitle {
        font-size: 0.9rem;
    }

    p {
        font-size: 0.8rem;
    }

    section {
        padding: 20px;
        margin: 100px 0;
    }
}

/* Add these styles to the existing CSS file */

.cursor-trail {
    width: 10px;
    height: 10px;
    border: 2px solid var(--secondary-color);
    position: fixed;
    pointer-events: none;
    z-index: 9998;
    transform: translate(-50%, -50%);
    opacity: 0.5;
}

.particle {
    width: 4px;
    height: 4px;
    background-color: var(--primary-color);
    position: fixed;
    pointer-events: none;
    z-index: 9997;
    animation: particle-animation 1s ease-out forwards;
}

@keyframes particle-animation {
    0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
    }

    100% {
        transform: translate(var(--x), var(--y)) scale(0);
        opacity: 0;
    }
}

/* Add glitch effect to headings */
.glitch {
    animation: glitch 0.3s linear;
}

@keyframes glitch {
    0% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(0);
    }

    20% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(-2px, 2px);
    }

    40% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(2px, -2px);
    }

    60% {
        text-shadow: -2px 0 var(--primary-color), 2px 0 var(--secondary-color);
        transform: translate(-2px, 2px);
    }

    80% {
        text-shadow: -2px 0 var(--primary-color), 2px 0 var(--secondary-color);
        transform: translate(2px, -2px);
    }

    100% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(0);
    }
}

/* Add loading animation */
.loading {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--background-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
}

.loading::after {
    content: '';
    width: 50px;
    height: 50px;
    border: 5px solid var(--primary-color);
    border-top-color: transparent;
    border-radius: 50%;
    animation: loading 1s linear infinite;
}

@keyframes loading {
    to {
        transform: rotate(360deg);
    }
}

/* Add these styles to the existing CSS file */

.background-container,
.background-section,
#bg1,
#bg2,
#bg3,
#bg4 {
    display: none;
}

/* Add scroll indicator */
.scroll-indicator {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 100;
    color: var(--primary-color);
    text-shadow: 2px 2px 0 var(--secondary-color);
    animation: bounce 2s infinite;
}

@keyframes bounce {

    0%,
    20%,
    50%,
    80%,
    100% {
        transform: translateY(0) translateX(-50%);
    }

    40% {
        transform: translateY(-20px) translateX(-50%);
    }

    60% {
        transform: translateY(-10px) translateX(-50%);
    }
}

/* Add these styles to the existing CSS file */

.text-box {
    background: rgba(0, 0, 0, 0.7);
    border: 2px solid var(--primary-color);
    padding: 20px;
    margin: 20px 0;
    position: relative;
    backdrop-filter: blur(5px);
    transform-style: preserve-3d;
    perspective: 1000px;
    opacity: 0;
    transition: all 0.3s ease;
    transform-origin: center;
    font-size: 18px;
}

.text-box.small {
    border: 2px solid var(--secondary-color);
    max-width: 400px;
    margin: 20px auto;
    font-size: 16px;
}

.text-box.visible {
    opacity: 1;
}

.text-box.highlight {
    background: rgba(255, 0, 255, 0.1);
    border-color: var(--secondary-color);
    transform: translateX(20px);
}

.image-box {
    margin: 20px 0;
    border: 2px solid var(--primary-color);
    padding: 10px;
    background: rgba(0, 0, 0, 0.8);
    opacity: 0;
    transition: opacity 0.5s ease;
}

.image-box.visible {
    opacity: 1;
}

.findings-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
    margin-top: 40px;
}

.finding {
    background: rgba(0, 0, 0, 0.7);
    border: 2px solid var(--primary-color);
    padding: 25px;
    position: relative;
    transform-style: preserve-3d;
    perspective: 1000px;
}

.finding:nth-child(odd) {
    transform: rotate(-1deg);
}

.finding:nth-child(even) {
    transform: rotate(1deg);
}

.finding:hover {
    transform: scale(1.02) rotate(0deg);
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
}

/* Add animation for text boxes */
@keyframes text-box-enter {
    0% {
        opacity: 0;
        transform: translateY(50px) rotate(5deg);
    }

    100% {
        opacity: 1;
        transform: translateY(0) rotate(0deg);
    }
}

.text-box {
    animation: text-box-enter 0.8s ease-out forwards;
}

/* Add responsive design for findings grid */
@media (max-width: 768px) {
    .findings-grid {
        grid-template-columns: 1fr;
    }

    .text-box.highlight {
        transform: translateX(0);
    }

    .finding {
        transform: rotate(0deg) !important;
    }
}

/* Add hover effects for text boxes */
.text-box:hover {
    transform: scale(1.02) rotate(0.5deg);
    box-shadow: 0 0 30px rgba(255, 0, 255, 0.4);
    border-color: var(--secondary-color);
}

/* Glowing effect for borders */
.text-box::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border: 2px solid var(--secondary-color);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
}

.text-box:hover::after {
    opacity: 1;
    animation: border-glow 2s infinite;
}

@keyframes border-glow {
    0% {
        box-shadow: 0 0 5px var(--secondary-color);
    }

    50% {
        box-shadow: 0 0 20px var(--secondary-color);
    }

    100% {
        box-shadow: 0 0 5px var(--secondary-color);
    }
}

/* Add content transitions */
.content {
    transition: transform 0.3s ease;
}

.content:hover {
    transform: scale(1.01);
}

/* Add section transitions */
section {
    transition: all 0.5s ease;
}

section:hover {
    transform: translateY(-10px);
    box-shadow: 0 0 30px rgba(255, 0, 255, 0.5);
}

/* Add map container styles */
.map-container {
    display: flex;
    gap: 30px;
    align-items: center;
    padding: 20px;
}

.map-text {
    flex: 1;
    padding-right: 20px;
}

.map-image {
    flex: 1;
    position: relative;
    overflow: hidden;
    border: 2px solid var(--primary-color);
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.3);
}

.map-img {
    width: 100%;
    height: auto;
    display: block;
}

.map-image::before {
    display: none;
}

.map-image:hover .map-img {
    transform: scale(1.05);
}

/* Update responsive design for map container */
@media (max-width: 768px) {
    .map-container {
        flex-direction: column;
    }

    .map-text {
        padding-right: 0;
        margin-bottom: 20px;
    }

    .map-image {
        width: 100%;
    }
}

/* Update background section transitions */
.background-section.active {
    opacity: 0.7;
    transform: translateY(0) scale(1.1);
    transition: transform 1s ease, opacity 1s ease;
}

/* Add parallax effect to background */
.background-section {
    transform: translateY(var(--scroll-y)) scale(1);
    will-change: transform;
}

.text-box.scroll-box {
    animation: scroll-in 1s ease-out forwards, subtle-float 4s ease-in-out infinite;
    opacity: 0;
    transform: translateY(50px);
}

.quote-box {
    background: rgba(0, 0, 0, 0.7);
    border: 2px solid var(--secondary-color);
    padding: 20px;
    margin: 20px 0;
    font-style: italic;
    opacity: 0;
    transition: opacity 0.5s ease;
    position: relative;
    overflow: hidden;
    font-size: 18px;
}

.quote-box::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent 45%, var(--secondary-color) 45%, var(--secondary-color) 55%, transparent 55%);
    background-size: 20px 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.quote-box:hover::before {
    opacity: 0.1;
}

.quote-box.visible {
    opacity: 1;
}

.quote-box.wide {
    max-width: 800px;
    margin: 20px auto;
}

.quote-author {
    font-family: var(--quote-font);
    font-style: italic;
    text-align: right;
    margin-top: 10px;
    color: var(--secondary-color);
    font-size: 16px;
}

.capacity-grid {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin: 40px 0;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

.capacity-grid .text-box {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.capacity-grid .text-box p {
    margin-bottom: 0;
}

.capacity-icon {
    font-size: 40px;
    margin-bottom: 20px;
    text-align: center;
    flex-shrink: 0;
    transition: all 0.3s ease;
}

.capacity-grid h3 {
    margin: 10px 0;
    flex-shrink: 0;
}

.capacity-icon:hover {
    transform: scale(1.2) rotate(10deg);
    text-shadow: 0 0 10px var(--secondary-color);
}

@keyframes scroll-in {
    0% {
        opacity: 0;
        transform: translateY(50px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.author {
    color: var(--secondary-color);
    font-size: 18px;
    margin-top: 10px;
    text-align: center;
}

@media (max-width: 768px) {
    .capacity-grid {
        grid-template-columns: 1fr;
    }

    .text-box.small {
        max-width: 100%;
    }
}

/* Remove the double border effect */
.text-box::before,
.finding::before,
.map-image::before {
    display: none;
}

/* Add scroll fade effect */
@keyframes fade-out {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.text-box.fade-out {
    animation: fade-out 0.5s ease forwards;
}

.quote-box.fade-out {
    animation: fade-out 0.5s ease forwards;
}

.image-box.fade-out {
    animation: fade-out 0.5s ease forwards;
}

/* Map overlay styles */
.map-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.location-marker {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.marker-dot {
    display: block;
    width: 12px;
    height: 12px;
    background: var(--secondary-color);
    border-radius: 50%;
    animation: pulse 2s infinite, rotate 4s linear infinite;
}

.marker-label {
    position: absolute;
    top: -30px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    padding: 5px 10px;
    border: 2px solid var(--secondary-color);
    font-size: 16px;
}

@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }

    50% {
        transform: scale(1.5);
        opacity: 0.5;
    }

    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* Data visualization styles */
.data-visualization {
    display: flex;
    justify-content: space-around;
    margin: 30px 0;
    gap: 20px;
}

.data-point {
    text-align: center;
    padding: 20px;
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid var(--primary-color);
    border-radius: 10px;
    transition: transform 0.3s ease;
    animation: float 6s ease-in-out infinite;
    font-size: 18px;
}

.data-point:hover {
    transform: translateY(-5px);
}

.data-icon {
    font-size: 32px;
    margin-bottom: 10px;
    transition: all 0.3s ease;
    display: inline-block;
}

.data-icon:hover {
    transform: scale(1.2) rotate(10deg);
    text-shadow: 0 0 10px var(--secondary-color);
}

.data-text {
    font-size: 0.9rem;
    color: var(--secondary-color);
}

/* Argument flow styles */
.argument-visual {
    margin: 30px 0;
    padding: 20px;
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid var(--secondary-color);
}

.argument-flow {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 30px 0;
}

.flow-step {
    text-align: center;
    flex: 1;
    transition: all 0.3s ease;
    font-size: 18px;
}

.flow-step:hover {
    transform: scale(1.1);
    text-shadow: 0 0 10px var(--secondary-color);
}

.step-icon {
    font-size: 32px;
    margin-bottom: 10px;
}

.flow-arrow {
    font-size: 2rem;
    color: var(--secondary-color);
    margin: 0 20px;
    animation: arrow-pulse 2s infinite;
}

@keyframes arrow-pulse {
    0% {
        opacity: 0.5;
    }

    50% {
        opacity: 1;
    }

    100% {
        opacity: 0.5;
    }
}

/* Timeline styles */
.timeline {
    position: relative;
    margin: 40px 0;
    padding: 20px;
}

.timeline::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    width: 2px;
    height: 100%;
    background: var(--secondary-color);
}

.timeline-item {
    position: relative;
    margin-bottom: 30px;
    width: 50%;
    padding: 20px;
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid var(--primary-color);
}

.timeline-item:nth-child(odd) {
    margin-left: 50%;
}

.timeline-date {
    font-size: 1.2rem;
    color: var(--secondary-color);
    margin-bottom: 10px;
}

/* Impact grid styles */
.impact-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.impact-item {
    text-align: center;
    padding: 15px;
    background: rgba(0, 0, 0, 0.6);
    border: 2px solid var(--primary-color);
    border-radius: 10px;
    transition: transform 0.3s ease;
    font-size: 18px;
}

.impact-item:hover {
    transform: translateY(-5px);
}

.impact-icon {
    font-size: 32px;
    margin-bottom: 10px;
    transition: all 0.3s ease;
    display: inline-block;
}

.impact-icon:hover {
    transform: scale(1.2) rotate(10deg);
    text-shadow: 0 0 10px var(--secondary-color);
}

/* Quote icon styles */
.quote-icon {
    font-size: 4rem;
    color: var(--secondary-color);
    opacity: 0.3;
    position: absolute;
    top: -20px;
    left: 20px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .data-visualization {
        flex-direction: column;
    }

    .argument-flow {
        flex-direction: column;
    }

    .flow-arrow {
        transform: rotate(90deg);
        margin: 20px 0;
    }

    .timeline::before {
        left: 20px;
    }

    .timeline-item {
        width: calc(100% - 40px);
        margin-left: 40px;
    }

    .timeline-item:nth-child(odd) {
        margin-left: 40px;
    }

    .impact-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

/* Floating animation for data points */
@keyframes float {
    0% {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }

    100% {
        transform: translateY(0px);
    }
}

/* Enhanced background effects */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at var(--mouse-x, 50%) var(--mouse-y, 50%), transparent 0%, rgba(0, 0, 0, 0.3) 100%);
    pointer-events: none;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.3s ease;
}

body:hover::before {
    opacity: 1;
}

/* Interactive cursor effects */
.custom-cursor {
    width: 20px;
    height: 20px;
    border: 2px solid var(--secondary-color);
    border-radius: 50%;
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    transition: transform 0.1s ease;
    mix-blend-mode: difference;
}

.custom-cursor::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 4px;
    height: 4px;
    background: var(--primary-color);
    border-radius: 50%;
    transform: translate(-50%, -50%);
}

/* Matrix rain effect for background */
.matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
    opacity: 0.1;
}

/* Glitch text effect */
.glitch-text {
    position: relative;
    animation: glitch-text 2s infinite;
}

@keyframes glitch-text {
    0% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(0);
    }

    20% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(-2px, 2px);
    }

    40% {
        text-shadow: -2px 0 var(--primary-color), 2px 0 var(--secondary-color);
        transform: translate(2px, -2px);
    }

    60% {
        text-shadow: -2px 0 var(--primary-color), 2px 0 var(--secondary-color);
        transform: translate(-2px, 2px);
    }

    80% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(2px, -2px);
    }

    100% {
        text-shadow: 2px 0 var(--primary-color), -2px 0 var(--secondary-color);
        transform: translate(0);
    }
}

/* Holographic effect */
.holographic {
    position: relative;
    overflow: hidden;
}

.holographic::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg,
            transparent 45%,
            var(--primary-color) 45%,
            var(--primary-color) 55%,
            transparent 55%);
    background-size: 20px 20px;
    animation: holographic-scan 4s linear infinite;
    opacity: 0.1;
}

@keyframes holographic-scan {
    0% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(20px);
    }
}

/* Digital noise effect */
.digital-noise {
    position: relative;
}

.digital-noise::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.05;
    pointer-events: none;
}

/* Cyberpunk scan lines */
.scan-lines {
    position: relative;
    overflow: hidden;
}

.scan-lines::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(to bottom,
            transparent 0%,
            rgba(255, 0, 255, 0.05) 0.5%,
            transparent 1%);
    animation: scan-lines 8s linear infinite;
}

@keyframes scan-lines {
    0% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(100%);
    }
}

/* Neon pulse effect */
.neon-pulse {
    animation: neon-pulse 2s infinite;
}

@keyframes neon-pulse {
    0% {
        text-shadow: 0 0 5px var(--primary-color),
            0 0 10px var(--primary-color),
            0 0 20px var(--primary-color);
    }

    50% {
        text-shadow: 0 0 10px var(--primary-color),
            0 0 20px var(--primary-color),
            0 0 30px var(--primary-color);
    }

    100% {
        text-shadow: 0 0 5px var(--primary-color),
            0 0 10px var(--primary-color),
            0 0 20px var(--primary-color);
    }
}

/* Digital distortion effect */
.distortion {
    position: relative;
}

.distortion::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg,
            transparent 0%,
            rgba(255, 0, 255, 0.1) 50%,
            transparent 100%);
    animation: distortion-wave 3s infinite;
}

@keyframes distortion-wave {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(100%);
    }
}

/* Add these classes to existing elements */
.text-box {
    position: relative;
}

.text-box::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg,
            transparent 45%,
            var(--primary-color) 45%,
            var(--primary-color) 55%,
            transparent 55%);
    background-size: 20px 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.text-box:hover::before {
    opacity: 0.1;
    animation: holographic-scan 4s linear infinite;
}

/* Add digital noise to sections */
section {
    position: relative;
}

section::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.03;
    pointer-events: none;
}

/* Add scan lines to the background */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(to bottom,
            transparent 0%,
            rgba(255, 0, 255, 0.03) 0.5%,
            transparent 1%);
    animation: scan-lines 8s linear infinite;
    pointer-events: none;
    z-index: 1;
}

.background-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background-image: url('public/images/backgrounds/bg_main.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0.8;
}